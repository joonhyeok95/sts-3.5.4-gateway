plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.metanet'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

ext {
    set('springCloudVersion', "2025.0.0") // Spring Boot 3.x와 맞는 Spring Cloud 버전
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
repositories {
	mavenCentral()
}

dependencies {
	// Spring Cloud Gateway
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    // circuitbreaker
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
    // JWT 
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server' // JWT 검증
        
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // timestamp 가 LocalDateTime 일 경우
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.0'
	
    // 아래 두 줄 추가 (테스트용)
    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
}

tasks.named('test') {
	useJUnitPlatform()
}
